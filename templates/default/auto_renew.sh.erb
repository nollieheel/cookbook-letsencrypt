#!/bin/bash

# Generated by Chef

# Try to renew the certificates every ${run_days} days at ${run_time} time.

run_time=<%= @time %>
run_days=<%= @days %>

certbot_bin=<%= @certbot_bin %>
script_dir=<%= @script_dir %>

comm="bash ${script_dir}/$( basename $0 )"

usage() {
    echo "Usage: ${0} [-h | -s]"
    echo "    -h   Show this help"
    echo "    -s   Schedule next renewal"
}

proceed=run
while getopts ":hs" opt; do
    case "$opt" in
        h) proceed=help ;;
        s) proceed=sched ;;
        *) usage; exit 1 ;;
    esac
done
shift $((OPTIND-1))

if [[ "$proceed" == help ]] ; then

    usage

elif [[ "$proceed" == sched ]] ; then

    # Schedule the next renew attempt, but not if there is
    # already another scheduled job running this same script.
    # 
    # To view the currently running jobs, use command:
    #   # atq
    # To delete a job:
    #   # atrm [job_number]
    qc=$( atq | while read q ; do at -c $( echo "$q" | cut -f1 ); done )
    if ! echo "$qc" | grep "$comm" ; then
        ( cd "$script_dir" && echo "$comm" |
              at -M "$run_time" + "$run_days" days )
    fi

    echo "Auto-renew set to run in ${run_days} days at ${run_time}."

elif [[ "$proceed" == run ]] ; then

    echo "Renewing certificates."
<% rcom = '$certbot_bin renew' -%>
<% rcom << ( @pre_hook ? " --pre-hook #{@pre_hook}" : '' ) -%>
<% rcom << ( @post_hook ? " --post-hook #{@post_hook}" : '' ) -%>
    <%= rcom %>
    res=$?

<% if @fail_hook -%>
    if [[ $res -ne 0 ]] ; then
<%= @fail_hook %>
    fi

<% end -%>
    echo "Automatically scheduling the next auto-renew script run."
    sleep 1 && $comm -s &

fi
